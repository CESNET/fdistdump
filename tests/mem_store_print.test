#!/bin/bash

# Author: Pavel Krobot, <Pavel.Krobot@cesnet.cz>
# Date: 2015
#
# Description: This tests storing flows in LibNF memory and printing of this
# memory. Testing flow values are passed through testing binary arguments along
# with count of copies of this flow. Testing binary output is then stored in
# file and all lines of this output are compared to expected values (those
# which were passed into the testing binary).
#
#
#
# Copyright (C) 2015 CESNET
#
# LICENSE TERMS
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
# 1. Redistributions of source code must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
# 2. Redistributions in binary form must reproduce the above copyright
#    notice, this list of conditions and the following disclaimer in
#    the documentation and/or other materials provided with the
#    distribution.
# 3. Neither the name of the Company nor the names of its contributors
#    may be used to endorse or promote products derived from this
#    software without specific prior written permission.
#
# ALTERNATIVELY, provided that this notice is retained in full, this
# product may be distributed under the terms of the GNU General Public
# License (GPL) version 2 or later, in which case the provisions
# of the GPL apply INSTEAD OF those given above.
#
# This software is provided ``as is'', and any express or implied
# warranties, including, but not limited to, the implied warranties of
# merchantability and fitness for a particular purpose are disclaimed.
# In no event shall the company or contributors be liable for any
# direct, indirect, incidental, special, exemplary, or consequential
# damages (including, but not limited to, procurement of substitute
# goods or services; loss of use, data, or profits; or business
# interruption) however caused and on any theory of liability, whether
# in contract, strict liability, or tort (including negligence or
# otherwise) arising in any way out of the use of this software, even
# if advised of the possibility of such damage.

TEST_LOG_FILE=mem_store_print.testlog
TEST_DESC="Store records in memory and print them"

rm -f $TEST_LOG_FILE

if [ -z $1 ]; then
        proc_cnt=3
else
        proc_cnt=$1
fi

recCnt=3
srcIP="192.168.0.1"
srcPort="10"
dstIP="10.0.1.222"
dstPort="6666"
proto="6"
flows="1"
pkts="50"
bytes="2000"
tStart="1433222111000"
tEnd="1433222666000"

tStart_pretty="2015-06-02 05:15:11.0"
tEnd_pretty="2015-06-02 05:24:26.0"

mpirun -np $proc_cnt ./mem_store_print -c ${recCnt} -s ${srcIP} -S ${srcPort} \
        -d ${dstIP} -D ${dstPort} -P ${proto} -f ${flows} -p ${pkts} \
        -b ${bytes} -t "${tStart}" -T "${tEnd}" >tmp_res 2>$TEST_LOG_FILE


if [ $? -eq 0 ]; then
        echo "${TEST_DESC} was successful (${proc_cnt} processes)." >>$TEST_LOG_FILE
else
        echo "${TEST_DESC} failed - returned $? (${proc_cnt} processes)." >>$TEST_LOG_FILE
        exit 1
fi

for (( i=2; i<=$recCnt; i++ )); do
        x=$(cat tmp_res | head -n $i | tail -n 1 | awk '{print $1, $2}')
        if [ "$x" != "$tStart_pretty" ]; then
                echo "${TEST_DESC}: bad result (line ${i}, time_start)." >>$TEST_LOG_FILE
                exit 1
        fi
        x=$(cat tmp_res | head -n $i | tail -n 1 | awk '{print $3, $4}')
        if [ "$x" != "$tEnd_pretty" ]; then
                echo "${TEST_DESC}: bad result (line ${i}, time_end)." >>$TEST_LOG_FILE
                exit 1
        fi
        x=$(cat tmp_res | head -n $i | tail -n 1 | awk '{print $5}')
        if [ "$x" != "$bytes" ]; then
                echo "${TEST_DESC}: bad result (line ${i}, bytes)." >>$TEST_LOG_FILE
                exit 1
        fi
        x=$(cat tmp_res | head -n $i | tail -n 1 | awk '{print $6}')
        if [ "$x" != "$pkts" ]; then
                echo "${TEST_DESC}: bad result (line ${i}, packets)." >>$TEST_LOG_FILE
                exit 1
        fi
        x=$(cat tmp_res | head -n $i | tail -n 1 | awk '{print $7}')
        if [ "$x" != "$flows" ]; then
                echo "${TEST_DESC}: bad result (line ${i}, packets)." >>$TEST_LOG_FILE
                exit 1
        fi
        x=$(cat tmp_res | head -n $i | tail -n 1 | awk '{print $8}')
        if [ "$x" != "$srcPort" ]; then
                echo "${TEST_DESC}: bad result (line ${i}, src_port)." >>$TEST_LOG_FILE
                exit 1
        fi
        x=$(cat tmp_res | head -n $i | tail -n 1 | awk '{print $9}')
        if [ "$x" != "$dstPort" ]; then
                echo "${TEST_DESC}: bad result (line ${i}, dst_port)." >>$TEST_LOG_FILE
                exit 1
        fi
        x=$(cat tmp_res | head -n $i | tail -n 1 | awk '{print $10}')
        if [ "$x" != "$srcIP" ]; then
                echo "${TEST_DESC}: bad result (line ${i}, src_ip)." >>$TEST_LOG_FILE
                exit 1
        fi
        x=$(cat tmp_res | head -n $i | tail -n 1 | awk '{print $11}')
        if [ "$x" != "$dstIP" ]; then
                echo "${TEST_DESC}: bad result (line ${i}, dst_ip)." >>$TEST_LOG_FILE
                exit 1
        fi
done

echo "${TEST_DESC}: results OK." >>$TEST_LOG_FILE
exit 0
