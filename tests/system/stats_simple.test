#!/usr/bin/env bash

# Copyright 2015-2018 CESNET
#
# This file is part of Fdistdump.
#
# Fdistdump is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# Fdistdump is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with Fdistdump.  If not, see <http://www.gnu.org/licenses/>.


# Test for simple statistics query.


ADV_TESTS_HOME=$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )

# import common setup
. ${ADV_TESTS_HOME}/tests_setup.sh

ret_code=$?
if [[ $ret_code == 77 ]]; then
      exit 77
elif [[ $ret_code != 0 ]]; then
      echo "Error in common setup"
      exit 1
fi

TEST_DESC="Simple statistics query"



STAT_FIELD="proto"
SORT_FIELD="flows"

# run FDistDump query (store same command for logging)
FDD_CMD="mpiexec -np 2 $G_FDIST_DUMP -s $STAT_FIELD --output-format=csv \
        --fields=first,last,bytes,pkts $G_INPUT_DATA"
eval "$FDD_CMD" > "$G_FDD_RESULTS"
ret_code=$?
if [ ! $ret_code -eq 0 ]; then
        echo "Error: FDistDump returned $ret_code."
        rm -f $G_FDD_RESULTS
        exit 1
fi

# run NFDump query (store same command for logging)
NFD_CMD="nfdump -r $G_INPUT_DATA -q -o pipe -A $STAT_FIELD -O $SORT_FIELD -n 10"
eval "$NFD_CMD" > "$G_NFD_RESULTS"
ret_code=$?
if [ ! $ret_code -eq 0 ]; then
        echo "Error: FNDump returned $ret_code."
        rm -f $G_FDD_RESULTS $G_NFD_RESULTS
        exit 1
fi

# determine position of column by which the result is sorted
col_cnt=`awk -F',' '{print NF; exit}' $G_FDD_RESULTS`
for ((i=1; i <= $col_cnt ; i++)); do
        field=`head -n 1 $G_FDD_RESULTS | cut -d"," -f$i`
        if [[ "$SORT_FIELD" == "$field" ]]; then
            SORT_FIELD_POS=$i
            break
        fi
done

if [ -z $SORT_FIELD_POS ]; then
      echo "${TEST_DESC} failed - sort field error."
      exit 1
fi

# compare results
. ${ADV_TESTS_HOME}/./diff_results.sh "$G_FDD_RESULTS" "$G_NFD_RESULTS" "$G_QTYPE_STATS" "$STAT_FIELD" $SORT_FIELD_POS
#store return code
ret_code=$?

rm -f $G_FDD_RESULTS $G_NFD_RESULTS

# check return code from comparison
if [ $ret_code -eq 0 ]; then
        echo "${TEST_DESC} was successful."
        echo "     fdd-cmd: ${FDD_CMD}"
        echo "     nfd-cmd: ${NFD_CMD}"
else
        echo "${TEST_DESC} failed - returned $ret_code."
        echo "     fdd-cmd: ${FDD_CMD}"
        echo "     nfd-cmd: ${NFD_CMD}"
        exit 1
fi
