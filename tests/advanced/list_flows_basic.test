#!/bin/bash

# Author: Pavel Krobot, <Pavel.Krobot@cesnet.cz>
# Date: 2015
#
# Description: Test for unlimited list flows query.
#
#
#
# Copyright (C) 2015 CESNET
#
# LICENSE TERMS
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
# 1. Redistributions of source code must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
# 2. Redistributions in binary form must reproduce the above copyright
#    notice, this list of conditions and the following disclaimer in
#    the documentation and/or other materials provided with the
#    distribution.
# 3. Neither the name of the Company nor the names of its contributors
#    may be used to endorse or promote products derived from this
#    software without specific prior written permission.
#
# ALTERNATIVELY, provided that this notice is retained in full, this
# product may be distributed under the terms of the GNU General Public
# License (GPL) version 2 or later, in which case the provisions
# of the GPL apply INSTEAD OF those given above.
#
# This software is provided ``as is'', and any express or implied
# warranties, including, but not limited to, the implied warranties of
# merchantability and fitness for a particular purpose are disclaimed.
# In no event shall the company or contributors be liable for any
# direct, indirect, incidental, special, exemplary, or consequential
# damages (including, but not limited to, procurement of substitute
# goods or services; loss of use, data, or profits; or business
# interruption) however caused and on any theory of liability, whether
# in contract, strict liability, or tort (including negligence or
# otherwise) arising in any way out of the use of this software, even
# if advised of the possibility of such damage.

ADV_TESTS_HOME=$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )

# import common setup
. ${ADV_TESTS_HOME}/tests_setup.sh

ret_code=$?
if [[ $ret_code == 77 ]]; then
      exit 77
elif [[ $ret_code != 0 ]]; then
      echo "Error in common setup"
      exit 1
fi

TEST_DESC="Basic list flows query"



# run FDistDump query (store same command for logging)
FDD_CMD="mpirun -np 2 $G_FDIST_DUMP --output-format=csv \
        --fields=first,last,bytes,pkts,srcport,dstport,tcpflags,srcip,dstip,proto \
        $G_INPUT_DATA"
eval "$FDD_CMD" > "$G_FDD_RESULTS"
ret_code=$?
if [ ! $ret_code -eq 0 ]; then
        echo "Error: FDistDump returned $ret_code."
        rm -f $G_FDD_RESULTS
        exit 1
fi

# run NFDump query (store same command for logging)
NFD_CMD="nfdump -r $G_INPUT_DATA -q -o pipe"
eval "$NFD_CMD" > "$G_NFD_RESULTS"
ret_code=$?
if [ ! $ret_code -eq 0 ]; then
        echo "Error: FNDump returned $ret_code."
        rm -f $G_FDD_RESULTS $G_NFD_RESULTS
        exit 1
fi

# compare results
. ${ADV_TESTS_HOME}/diff_results.sh "$G_FDD_RESULTS" "$G_NFD_RESULTS" "$G_QTYPE_LISTFLOWS"
#store return code
ret_code=$?

rm -f $G_FDD_RESULTS $G_NFD_RESULTS

# check return code from comparison
if [ $ret_code -eq 0 ]; then
        echo "${TEST_DESC} was successful."
        echo "     fdd-cmd: ${FDD_CMD}"
        echo "     nfd-cmd: ${NFD_CMD}"
else
        echo "${TEST_DESC} failed - returned $ret_code."
        echo "     fdd-cmd: ${FDD_CMD}"
        echo "     nfd-cmd: ${NFD_CMD}"
        exit 1
fi

exit 0
